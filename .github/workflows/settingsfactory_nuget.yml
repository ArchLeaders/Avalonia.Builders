name: "Deploy SettingsFactory to NuGet"

on:
  push:
    tags:
      - "v*"

env:
  CORE_CSPROJ: "Avalonia.SettingsFactory.Core/Avalonia.SettingsFactory.Core.csproj"
  CORE_BUILD: "${{ github.workspace }}/build_core"
  CORE_NUGET_SRC: "https://api.nuget.org/v3/index.json"

  CSPROJ: "Avalonia.SettingsFactory/Avalonia.SettingsFactory.csproj"
  BUILD: "${{ github.workspace }}/build"
  NUGET_SRC: "https://api.nuget.org/v3/index.json"

jobs:
  deploy_core:
    name: "Deploy AvaloniaSettingsFactory.Core"
    runs-on: ubuntu-latest

    steps:
      - name: "Checkout"
        uses: actions/checkout@v2

      - name: "Install DotNET"
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: "6.0.x"

      - name: "Restore packages"
        run: dotnet restore ${{ env.CORE_CSPROJ }}

      - name: "Build project"
        run: dotnet build ${{ env.CORE_CSPROJ }} --no-restore --configuration Release

      - name: "Get Version"
        id: version
        uses: battila7/get-version-action@v2

      - name: "Pack project"
        run: dotnet pack ${{ env.CORE_CSPROJ }} --no-restore --configuration Release -p:PackageVersion=${{ steps.version.outputs.version-without-v }} --output ${{ env.CORE_BUILD }}

      - name: "Push package"
        run: dotnet nuget push ${{ env.CORE_BUILD }}/*.nupkg -k ${{ secrets.CORE_NUGET_AUTH }} -s ${{ env.CORE_NUGET_SRC }}

  deploy:
    name: "Deploy AvaloniaSettingsFactory"
    runs-on: ubuntu-latest

    steps:
      - name: "Checkout"
        uses: actions/checkout@v2

      - name: "Install DotNET"
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: "6.0.x"

      - name: "Restore packages"
        run: dotnet restore ${{ env.CSPROJ }}

      - name: "Build project"
        run: dotnet build ${{ env.CSPROJ }} --no-restore --configuration Release

      - name: "Get Version"
        id: version
        uses: battila7/get-version-action@v2

      - name: "Pack project"
        run: dotnet pack ${{ env.CSPROJ }} --no-restore --configuration Release -p:PackageVersion=${{ steps.version.outputs.version-without-v }} --output ${{ env.BUILD }}

      - name: "Push package"
        run: dotnet nuget push ${{ env.BUILD }}/*.nupkg -k ${{ secrets.NUGET_AUTH }} -s ${{ env.NUGET_SRC }}
